name: Run Tests and Lint

on:
  push:
    branches: [ Development, main ]
  pull_request:
    branches: [ Development, main ]

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: scraping_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8 black

      - name: Load .env.test
        uses: xom9ikk/dotenv@v2.3.0
        with:
          path: environment
          mode: test   # => .env.test を読み込む

      - name: Initialize database schema
        run: python init_db.py

      - name: Install Playwright browsers
        run: playwright install --with-deps chromium

      - name: 🧪 Run tests with pytest (MySQL)
        env:
          DB_BACKEND: mysql
          TEST_DB: mysql
        run: |
          export PYTHONPATH="${{ github.workspace }}"
          pytest --cov=scraper --cov=models --cov=link_extractor --cov=robots_handler \
                 --cov-report=xml tests/

      - name: 🧼 Run flake8 lint check
        run: |
          flake8 scraper.py models.py link_extractor.py robots_handler.py tests \
                 --max-line-length=88 --exclude=__init__.py

      - name: 🎨 Run black formatting check
        run: |
          black --check scraper.py models.py link_extractor.py robots_handler.py tests

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: scrape-pytest
          fail_ci_if_error: true
